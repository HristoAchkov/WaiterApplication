@using WaiterApplication.Core.Models.QueryModels;
@model AllDishesQueryModel

@{
    ViewBag.Title = "All Dishes";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4">
            <div class="input-group">
                <input asp-for="SearchTerm" class="form-control" placeholder="Search by search term">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>

        <div class="col-md-4">
            <select asp-for="Sorting" class="form-select">
                <option value="0">Sort by Name</option>
                <option value="1">Sort by Price Descending</option>
            </select>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalDishesCount /
        Model.DishesPerPage);
}

<div class="row mb-4">
    <div class="col-md-6">
        <a class="btn btn-outline-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Menu"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">Previous Page</a>
    </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Dishes.Any();
    }

    <div class="col-md-6 text-end">
        <a class="btn btn-outline-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Menu"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">Next Page</a>
    </div>
</div>

@if (!Model.Dishes.Any())
{
    <div class="alert alert-warning" role="alert">
        No dishes found by the given criteria.
    </div>
}

<div class="row">
    @foreach (var dish in Model.Dishes)
    {
        <partial name="_DishPartial" model="@dish" />
    }
</div>